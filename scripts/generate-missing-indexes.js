
const PROJECT_ID = 'enygna-4957d';

// √çndices que voc√™ J√Å TEM (n√£o precisam ser criados)
const EXISTING_INDEXES = [
  'security_alerts: resolved + timestamp',
  'financeiro_documentos: userId + status + criadoEm', 
  'sessions: end + start',
  'financeiro_documentos: userId + tipo + criadoEm',
  'financeiro_documentos: userId + criadoEm'
];

// √çndices que ainda FALTAM baseado no seu projeto
const MISSING_INDEXES = [
  // ===== SISTEMA DE ADMINISTRA√á√ÉO =====
  {
    collection: 'security_events',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'type', direction: 'asc' },
      { name: 'severity', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Eventos de seguran√ßa por usu√°rio, tipo e severidade'
  },
  {
    collection: 'admin_users',
    fields: [
      { name: 'role', direction: 'asc' },
      { name: 'isActive', direction: 'asc' },
      { name: 'createdAt', direction: 'desc' }
    ],
    description: 'Usu√°rios admin por role e status'
  },

  // ===== SISTEMA FINANCEIRO =====
  {
    collection: 'financeiro_documentos',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'statusAprovacao', direction: 'asc' },
      { name: 'criadoEm', direction: 'desc' }
    ],
    description: 'Documentos financeiros por usu√°rio, status de aprova√ß√£o e data'
  },
  {
    collection: 'financeiro_relatorios',
    fields: [
      { name: 'geradoPor', direction: 'asc' },
      { name: 'periodo.ano', direction: 'asc' },
      { name: 'geradoEm', direction: 'desc' }
    ],
    description: 'Relat√≥rios financeiros por gerador, ano e data'
  },
  {
    collection: 'financeiro_auditoria',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Auditoria financeira por usu√°rio e timestamp'
  },
  {
    collection: 'financeiro_auditoria',
    fields: [
      { name: 'entityType', direction: 'asc' },
      { name: 'entityId', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Auditoria financeira por tipo de entidade, ID e timestamp'
  },

  // ===== SISTEMA DE CHAMADOS =====
  {
    collection: 'chamados',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'status', direction: 'asc' },
      { name: 'criadoEm', direction: 'desc' }
    ],
    description: 'Chamados por usu√°rio, status e data'
  },
  {
    collection: 'chamados',
    fields: [
      { name: 'empresaId', direction: 'asc' },
      { name: 'prioridade', direction: 'asc' },
      { name: 'criadoEm', direction: 'desc' }
    ],
    description: 'Chamados por empresa, prioridade e data'
  },
  {
    collection: 'chamados',
    fields: [
      { name: 'atribuidoPara', direction: 'asc' },
      { name: 'status', direction: 'asc' },
      { name: 'atualizadoEm', direction: 'desc' }
    ],
    description: 'Chamados atribu√≠dos por t√©cnico, status e √∫ltima atualiza√ß√£o'
  },

  // ===== SISTEMA DE FROTA/GPS =====
  {
    collection: 'frota_veiculos',
    fields: [
      { name: 'empresaId', direction: 'asc' },
      { name: 'status', direction: 'asc' },
      { name: 'ultimaLocalizacao.timestamp', direction: 'desc' }
    ],
    description: 'Ve√≠culos por empresa, status e √∫ltima localiza√ß√£o'
  },
  {
    collection: 'gps_tracking',
    fields: [
      { name: 'vehicleId', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Rastreamento GPS por ve√≠culo e timestamp'
  },
  {
    collection: 'gps_tracking',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'isActive', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Rastreamento GPS por usu√°rio, status ativo e timestamp'
  },

  // ===== SISTEMA DE USU√ÅRIOS E SESS√ïES =====
  {
    collection: 'users',
    fields: [
      { name: 'role', direction: 'asc' },
      { name: 'empresaId', direction: 'asc' },
      { name: 'isActive', direction: 'asc' }
    ],
    description: 'Usu√°rios por role, empresa e status ativo'
  },
  {
    collection: 'sessions',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'status', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Sess√µes por usu√°rio, status e timestamp'
  },
  {
    collection: 'user_activity',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'action', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Atividade de usu√°rios por usu√°rio, a√ß√£o e timestamp'
  },

  // ===== SISTEMA DE LGPD =====
  {
    collection: 'lgpd_consents',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'consentType', direction: 'asc' },
      { name: 'granted', direction: 'asc' },
      { name: 'timestamp', direction: 'desc' }
    ],
    description: 'Consentimentos LGPD por usu√°rio, tipo, status e timestamp'
  },
  {
    collection: 'lgpd_requests',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'requestType', direction: 'asc' },
      { name: 'status', direction: 'asc' },
      { name: 'createdAt', direction: 'desc' }
    ],
    description: 'Solicita√ß√µes LGPD por usu√°rio, tipo, status e data'
  },

  // ===== SISTEMA DE NOTIFICA√á√ïES =====
  {
    collection: 'notifications',
    fields: [
      { name: 'userId', direction: 'asc' },
      { name: 'read', direction: 'asc' },
      { name: 'createdAt', direction: 'desc' }
    ],
    description: 'Notifica√ß√µes por usu√°rio, status de leitura e data'
  }
];

function generateMissingIndexLinks() {
  console.log('\nüîó √çNDICES QUE AINDA FALTAM NO SEU PROJETO');
  console.log('=' .repeat(80));
  console.log(`Projeto: ${PROJECT_ID}\n`);

  console.log('‚úÖ √çNDICES QUE VOC√ä J√Å TEM:');
  EXISTING_INDEXES.forEach((index, i) => {
    console.log(`${i + 1}. ${index}`);
  });

  console.log('\n‚ùå √çNDICES QUE AINDA FALTAM:');
  console.log(`Total: ${MISSING_INDEXES.length} √≠ndices\n`);

  MISSING_INDEXES.forEach((index, i) => {
    console.log(`${i + 1}. üìã ${index.collection}`);
    console.log(`   Descri√ß√£o: ${index.description}`);
    
    const fieldsStr = index.fields.map(f => 
      `${f.name} (${f.direction.toUpperCase()})`
    ).join(' + ');
    
    console.log(`   Campos: ${fieldsStr}`);
    console.log(`   üîó https://console.firebase.google.com/project/${PROJECT_ID}/firestore/indexes\n`);
  });

  console.log('\n‚ö° PRIORIDADE DE CRIA√á√ÉO (baseado nos erros do console):');
  console.log('üö® ALTA PRIORIDADE:');
  console.log('1. security_events (para resolver erro "failed-precondition")');
  console.log('2. sessions (para queries de usu√°rio + status)');
  console.log('3. notifications (para painel de notifica√ß√µes)');
  
  console.log('\nüî∂ M√âDIA PRIORIDADE:');
  console.log('1. chamados (sistema de tickets)');
  console.log('2. user_activity (auditoria de a√ß√µes)');
  console.log('3. financeiro_auditoria (auditoria financeira)');
  
  console.log('\nüî∑ BAIXA PRIORIDADE:');
  console.log('1. gps_tracking (funcionalidade GPS)');
  console.log('2. lgpd_* (conformidade LGPD)');
  console.log('3. frota_veiculos (gest√£o de frota)');

  console.log('\nüìã RESUMO:');
  console.log(`- √çndices existentes: ${EXISTING_INDEXES.length}`);
  console.log(`- √çndices faltantes: ${MISSING_INDEXES.length}`);
  console.log(`- Total necess√°rios: ${EXISTING_INDEXES.length + MISSING_INDEXES.length}`);
  
  console.log('\nüåê LINK PRINCIPAL:');
  console.log(`https://console.firebase.google.com/project/${PROJECT_ID}/firestore/indexes`);
}

// Executar o script
if (require.main === module) {
  generateMissingIndexLinks();
}

module.exports = { generateMissingIndexLinks, MISSING_INDEXES };
