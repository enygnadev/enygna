rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ===== FUNÇÕES DE SEGURANÇA =====
    function isSuperAdmin() {
      return request.auth != null && request.auth.token != null && (
        (request.auth.token.bootstrapAdmin == true) ||
        (request.auth.token.role == 'superadmin') ||
        (request.auth.token.role == 'adminmaster') ||
        (
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.bootstrapAdmin == true
        ) ||
        (
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin'
        ) ||
        (
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'adminmaster'
        )
      );
    }

    function isAdmin() {
      return request.auth != null && request.auth.token != null && (
        isSuperAdmin() || 
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'gestor'
      );
    }

    function isEmpresa() {
      return request.auth != null && request.auth.token != null && (
        request.auth.token.tipo == 'empresa' || 
        request.auth.token.role == 'empresa' || 
        request.auth.token.isEmpresa == true
      );
    }

    function isAuthenticated() { 
      return request.auth != null && request.auth.uid != null; 
    }

    // CORREÇÃO: Função atualizada para verificar ownerUid
    function isCompanyOwnerOrAuthorized(empresaId) {
      return isAuthenticated() && (
        request.auth.token.empresaId == empresaId ||
        request.auth.token.company == empresaId ||
        (
          exists(/databases/$(database)/documents/empresas/$(empresaId)) &&
          get(/databases/$(database)/documents/empresas/$(empresaId)).data.ownerUid == request.auth.uid
        )
      );
    }

    function isCompanyCollaborator(empresaId) {
      return request.auth != null && (
        isCompanyOwnerOrAuthorized(empresaId) || 
        exists(/databases/$(database)/documents/empresas/$(empresaId)/colaboradores/$(request.auth.uid))
      );
    }

    function hasRequiredFields(requiredFields) {
      return request.resource.data.keys().hasAll(requiredFields);
    }

    function hasUserSystemAccess(sistema) {
      return request.auth != null && request.auth.token != null && (
        isSuperAdmin() || isAdmin() ||
        (request.auth.token.sistemasAtivos != null && 
         sistema in request.auth.token.sistemasAtivos) ||
        (request.auth.token.canAccessSystems != null && 
         sistema in request.auth.token.canAccessSystems)
      );
    }

    function sameCompany(empresaId) {
      return request.auth != null && request.auth.token != null && (
        isSuperAdmin() || 
        request.auth.token.empresaId == empresaId ||
        request.auth.token.company == empresaId
      );
    }

    // ===== SUPERADMINS - ACESSO TOTAL =====
    match /{document=**} { 
      allow read, write: if isSuperAdmin(); 
    }

    // ===== ACESSO ESPECÍFICO PARA ADMINS DO SISTEMA =====
    match /admin_access/{document} {
      allow read, write: if isAuthenticated() && (
        request.auth.token.bootstrapAdmin == true ||
        isSuperAdmin()
      );
    }

    // === COLEÇÃO USERS ===
    match /users/{userId} {
      allow read: if isSuperAdmin() || 
        (isAuthenticated() && request.auth.uid == userId) ||
        (isAuthenticated() && isAdmin() && sameCompany(resource.data.empresaId));

      allow write: if isSuperAdmin() || 
        (isAuthenticated() && request.auth.uid == userId && validUserUpdate()) ||
        (isAuthenticated() && isAdmin());
    }

    // ===== EMPRESAS - CRIAÇÃO SEGURA E DONO EXPLÍCITO =====
    match /empresas/{empresaId} {
      allow read, write: if isSuperAdmin();

      allow read, update: if isAuthenticated() && isCompanyOwnerOrAuthorized(empresaId);

      // CORREÇÃO: Criação segura
      allow create: if isAuthenticated() && (
        // self-signup seguro: docId = uid, e-mail verificado e coerente
        (empresaId == request.auth.uid &&
         request.resource.data.email == request.auth.token.email &&
         request.auth.token.email_verified == true &&
         hasRequiredFields(['nome','email']) &&
         request.resource.data.nome.size() > 0 &&
         request.resource.data.nome.size() <= 100)
        // ou criação por admin/gestor
        || isAdmin()
      );

      match /{subcollection}/{document} {
        allow read, write: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && isCompanyOwnerOrAuthorized(empresaId);
      }

      match /colaboradores/{colaboradorId} {
        allow read, write: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && isCompanyOwnerOrAuthorized(empresaId);
        allow read, update: if isAuthenticated() && request.auth.uid == colaboradorId;

        match /sessions/{sessionId} {
          allow read, write, create: if isSuperAdmin();
          allow read, write, create: if isAuthenticated() && (
            isCompanyOwnerOrAuthorized(empresaId) || 
            request.auth.uid == colaboradorId
          );
        }
      }
    }

    // ===== SISTEMAS ESPECÍFICOS COM EMPRESAID AMARRADO =====
    match /chamados_empresas/{empresaId} {
      allow read, write: if isSuperAdmin();
      allow read: if isAuthenticated() && isCompanyCollaborator(empresaId);
      allow write, create: if isAuthenticated() && 
        isCompanyCollaborator(empresaId) && 
        hasUserSystemAccess('chamados') &&
        request.resource.data.empresaId == empresaId;

      match /{subcollection}/{document} {
        allow read, write, create: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && isCompanyCollaborator(empresaId);
      }
    }

    match /financeiro_empresas/{empresaId} {
      allow read, write: if isSuperAdmin();
      allow read: if isAuthenticated() && sameCompany(empresaId);
      allow write, create: if isAuthenticated() && 
        sameCompany(empresaId) && 
        hasUserSystemAccess('financeiro') && 
        (isAdmin() || request.auth.token.role == 'gestor') &&
        request.resource.data.empresaId == empresaId;

      match /{subcollection}/{document} {
        allow read, write, create: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && 
          sameCompany(empresaId) && 
          hasUserSystemAccess('financeiro');
      }
    }

    match /frota_empresas/{empresaId} {
      allow read, write: if isSuperAdmin();
      allow read: if isAuthenticated() && sameCompany(empresaId);
      allow write, create: if isAuthenticated() && 
        sameCompany(empresaId) && 
        hasUserSystemAccess('frota') &&
        request.resource.data.empresaId == empresaId;

      match /{subcollection}/{document} {
        allow read, write, create: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && sameCompany(empresaId);
      }
    }

    match /documentos_empresas/{empresaId} {
      allow read, write: if isSuperAdmin();
      allow read: if isAuthenticated() && sameCompany(empresaId);
      allow write, create: if isAuthenticated() && 
        sameCompany(empresaId) && 
        hasUserSystemAccess('documentos') &&
        request.resource.data.empresaId == empresaId;

      match /{subcollection}/{document} {
        allow read, write, create: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && sameCompany(empresaId);
      }
    }

    // CORREÇÃO: Ponto com e-mail verificado + janela de edição
    match /ponto_empresas/{empresaId} {
      allow read, write: if isSuperAdmin();

      allow read: if isAuthenticated() && isCompanyCollaborator(empresaId);

      allow create: if isAuthenticated() &&
                    sameCompany(empresaId) &&
                    hasUserSystemAccess('ponto') &&
                    request.auth.token.email_verified == true &&
                    request.resource.data.userId == request.auth.uid &&
                    request.resource.data.empresaId == empresaId;

      allow update: if isAuthenticated() &&
                    sameCompany(empresaId) &&
                    hasUserSystemAccess('ponto') &&
                    (
                      isAdmin() ||
                      (
                        resource.data.userId == request.auth.uid &&
                        resource.data.timestamp > request.time - duration.value(5, 'm')
                      )
                    ) &&
                    request.resource.data.empresaId == empresaId;

      allow delete: if isAuthenticated() &&
                    sameCompany(empresaId) &&
                    hasUserSystemAccess('ponto') &&
                    (isAdmin() || request.auth.token.role == 'gestor');

      match /{subcollection}/{document} {
        allow read, write, create: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && isCompanyCollaborator(empresaId);
      }
    }

    match /crm_empresas/{empresaId} {
      allow read, write: if isSuperAdmin();
      allow read: if isAuthenticated() && isCompanyCollaborator(empresaId);
      allow write, create: if isAuthenticated() && 
        sameCompany(empresaId) && 
        hasUserSystemAccess('crm') &&
        request.resource.data.empresaId == empresaId;

      match /{subcollection}/{document} {
        allow read, write, create: if isSuperAdmin();
        allow read, write, create: if isAuthenticated() && sameCompany(empresaId);
      }
    }

    // ===== NOTIFICAÇÕES - CORREÇÃO: SÓ O DONO CRIA/LÊ/ATUALIZA/DELETA =====
    match /Notifications/{userId}/items/{notificationId} {
      allow read, write: if isSuperAdmin();
      allow read, update, delete: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() &&
                    request.auth.uid == userId &&
                    hasRequiredFields(['userId','timestamp']) &&
                    request.resource.data.userId == userId;
    }

    // ===== SESSÕES E DADOS PESSOAIS =====
    match /users/{userId}/sessions/{sessionId} {
      allow read, write, create: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isSuperAdmin();
    }

    match /sessions/{document} {
      allow read, write: if isSuperAdmin();
      allow read, update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid && 
        hasRequiredFields(['userId', 'empresaId', 'timestamp']);
    }

    match /userTutorialStatus/{userId} {
      allow read, write, create: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isSuperAdmin();
    }

    // ===== CONFIGURAÇÕES PÚBLICAS =====
    match /planos/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /app_config/{document} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /system_settings/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAdmin();
      allow read: if isAuthenticated() && isEmpresa();
      // permitir leitura básica para usuários autenticados
      allow read: if isAuthenticated();
    }

    // ===== LOGS E AUDITORIA =====
    match /system_logs/{document} { 
      allow read, write: if isSuperAdmin(); 
    }

    match /security_events/{document} {
      allow read, write: if isSuperAdmin();
      allow create: if isAuthenticated();
    }

    match /audit_logs/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }

    // ===== NOTIFICAÇÕES ADMINISTRATIVAS =====
    match /admin_notifications/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAdmin();
      allow read: if isAuthenticated() && isEmpresa();
    }

    // ===== MONITORAMENTO =====
    match /performance_metrics/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }

    match /health_checks/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAdmin();
    }

    match /error_reports/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }

    // ===== CACHE =====
    match /cache/{document} {
      allow read, write: if isSuperAdmin();
      allow read: if isAuthenticated();
    }

    // ===== DENY EXPLÍCITAS =====
    match /internal_logs/{document} { 
      allow read, write: if false; 
    }

    match /system_secrets/{document} { 
      allow read, write: if false; 
    }

    match /backup_data/{document} { 
      allow read, write: if isSuperAdmin(); 
    }

    match /bootstrap_admins/{userId} { 
      allow read, write: if isSuperAdmin(); 
    }

    // ===== REGRAS PADRÃO =====
    match /{collection}/{document} {
      allow read: if isAuthenticated() && (
        collection in ['help_docs', 'faq', 'announcements', 'system_info']
      );
      allow create: if isAuthenticated() && (
        collection in ['feedback', 'support_requests']
      ) && hasRequiredFields(['userId', 'timestamp']) && request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated() && isEmpresa() && 
        collection in ['system_info', 'help_docs', 'announcements'];
    }

    // Regras específicas para subcoleções - sem wildcards permissivos
    // Todas as subcoleções devem ter regras explícitas definidas acima
  }
}